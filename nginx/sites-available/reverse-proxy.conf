upstream webserver {
    server nginx-webserver:3000;
}

upstream cdn {
    server nginx-cdn-signed-proxy:4000;
}

upstream url-signer-service {
    server url-signer-service:5000;
}

server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         web.alananetwork.private;

    # SSL
    ssl_certificate     /etc/nginx/ssl/alananetwork.private.crt;
    ssl_certificate_key /etc/nginx/ssl/alananetwork.private.key;

    # additional config
    include conf.d/general.conf;
    include conf.d/cache.conf;
    include conf.d/proxy.conf;

    # restrict methods
    if ($request_method !~ ^(GET|HEAD|CONNECT|OPTIONS)$) {
        return '405';
    }

    location ^~ / {
        proxy_pass            http://webserver;
        proxy_set_header      Host $host;    
        include conf.d/proxy.conf;
    }
}

server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         cdn.alananetwork.private;

    # SSL
    ssl_certificate     /etc/nginx/ssl/alananetwork.private.crt;
    ssl_certificate_key /etc/nginx/ssl/alananetwork.private.key;

    # additional config
    include conf.d/general.conf;
    include conf.d/cache.conf;
    include conf.d/proxy.conf;

    # restrict methods
    if ($request_method !~ ^(GET|HEAD|CONNECT|OPTIONS)$) {
        return '405';
    }

    location = /generate {
        # TODO: add authentication
        proxy_pass          http://url-signer-service;
        proxy_set_header    Host $host;    
        include             conf.d/proxy.conf;
    }

    location ^~ / {
        proxy_pass          http://cdn;
        proxy_set_header    Host $host;    
        include             conf.d/proxy.conf;
    }
}

# remove 'www'
server {
    listen 443 ssl http2;
    server_name www.alananetwork.private alananetwork.private;
    return 301 $scheme://web.alananetwork.private$request_uri;
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name alananetwork.private www.alananetwork.private web.alananetwork.private;
    return      301 https://web.alananetwork.private$request_uri;
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name cdn.alananetwork.private;
    return      301 https://cdn.alananetwork.private$request_uri;
}

# any other request with a domain not in a server block -> 404
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;
    ssl_certificate     /etc/nginx/ssl/alananetwork.private.crt;
    ssl_certificate_key /etc/nginx/ssl/alananetwork.private.key;
    return 404;
}
