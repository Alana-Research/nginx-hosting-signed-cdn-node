pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

# Load modules
include              /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    charset                       utf-8;
    sendfile                      on;
    tcp_nopush                    on;
    tcp_nodelay                   on;
    log_not_found                 off;
    types_hash_max_size           2048;
    types_hash_bucket_size        64;
    client_max_body_size          1k;
    client_body_buffer_size       1k;
    large_client_header_buffers   2 1k;


    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Log Format
    log_format              cloudflare '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $http_cf_ray $http_cf_connecting_ip $http_x_forwarded_for $http_x_forwarded_proto $http_true_client_ip $http_cf_ipcountry $http_cf_visitor $http_cdn_loop';
    log_format              json_combined escape=json
                                '{'
                                '"time_local":"$time_local",'
                                '"request_id":"$request_id",'
                                '"connection":"$connection",'
                                '"remote_addr":"$remote_addr",' #request addr
                                '"server_name":"$server_name",'
                                '"request":"$request",'
                                '"uri":"$uri",'
                                '"status": "$status",'
                                '"body_bytes_sent":"$body_bytes_sent",'
                                '"http_referrer":"$http_referer",' #page that requested resource
                                '"http_user_agent":"$http_user_agent",'
                                '"request_time":"$request_time",'
                                '"x_forwarded_for":"$http_x_forwarded_for"' #chain of ips or ip of the request
                                '"realip_remote_addr":"$realip_remote_addr",' #request addr
                                '}';

    # logging
    #access_log /var/log/nginx/access.log main buffer=512k flush=1m;
    access_log /var/log/nginx/access.log json_combined;
    error_log  /var/log/nginx/error.log warn;

    # Limits
    #limit_req_log_level    warn;
    #limit_req_zone         $binary_remote_addr zone=login:10m rate=10r/m;

    # SSL
    ssl_session_timeout    1d;
    ssl_session_cache      shared:SSL:10m;
    ssl_session_tickets    off;
    #ssl_dhparam            /etc/nginx/ssl/dhparam.pem;
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # OCSP Stapling
    #ssl_stapling           on;
    #ssl_stapling_verify    on;

    # Disables emitting Nginx version in error messages and in the 'Server' HTTP response header.
    server_tokens          off;

    # DNS resolver
    #resolver 8.8.8.8; 

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $remote_addr $proxy_forwarded_elem {
        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$        "for=$remote_addr";
        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";
        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        # If the incoming Forwarded header is syntactically valid, append to it
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";
        # Otherwise, replace it
        default "$proxy_forwarded_elem";
    }

    include /etc/nginx/sites-enabled/*;
}
